#! /usr/bin/env python3
import sys, re, os

define = r'\nObject.defineProperty\(exports, "__esModule", \{\n\s*value: true\n\s*\}\);\n'
export_import = r'Object.defineProperty\(exports, \'(\w+)\', \{\n\s*enumerable: true,\n\s*get: function get\(\) \{\n\s*return (.*).\1;\n\s*\}\n\s*\}\);'
require = r'\nvar (\w+) = require\(\'(.+)\'\);\n'
export = r'var (\w+) = exports.\1 ='

for jsfile in sys.argv[1:]:
    with open(jsfile) as file:
        text = file.read()

    header = '.pragma library\n'

    for (name, filename) in re.findall(require, text):
        if filename.startswith('./'):
        	header += '.import "{}.js" as QML{}\n'.format(filename, name)
        else:
            header += '.import {} as QML{}\n'.format(filename, name)

    header += '\n'

    for (name, filename) in re.findall(require, text):
    	header += 'var {} = QML{}\n'.format(name, name)

    header += '\n'

    text = re.sub(define, '', text)
    text = re.sub(require, '', text)
    text = re.sub(r'\n(exports.\w+\s*=\s*)+ undefined;\n', '\n', text)
    text = re.sub(r'exports.\w+ = \w+;\n', '', text)
    text = re.sub(export, r'var \1 =', text)
    text = re.sub(export_import, r'var \1 = \2.\1;', text)

    text = header + text

    with open(jsfile, 'w') as file:
        file.write(text)
